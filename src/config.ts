import { Octokit } from '@octokit/rest';
import { ConfigChecker } from 'configchecker';
import dotenv from 'dotenv';
import path from 'path';

dotenv.config({ path: path.join(process.cwd(), '.env') });
const config = ConfigChecker.from(process.env);

export const LOOP_INTERVAL = config.get('LOOP_INTERVAL').number().required().value;

export const BASE_PATH = config.get('BASE_PATH').required().value;

export const GITHUB_USERNAME = config.get('GITHUB_USERNAME').required().value;
export const GITHUB_ORGANIZATIONS = config.get('GITHUB_ORGANIZATIONS').list().required().value;
export const GITHUB_TOKEN = config.get('GITHUB_TOKEN', `@see https://github.com/settings/tokens`).required().value;

export const MIDJOURNEY_COOKIES = config
    .get('MIDJOURNEY_COOKIES', `Cookies of logged-in Midjoirney user`)
    .json()
    .asType<Record<string, string>>()
    .required().value;

// export const MIDJOURNEY_GALLERY_PATH = 'C:/Users/me/Downloads/midjourney';
export const MIDJOURNEY_GALLERY_PATH = 'X:/Mythings/MidJourney';

export const PROJECT_FLAGS: Record<string, { isPrivate: boolean; isArchived: boolean; isFork: boolean }> = {
    /* Note: It will be filled dynamically with isPrivate:boolean */
};

export const BATCH_PROJECT_EDITOR_COMMIT_SIGNATURE = `üîº This commit was automatically generated by [Batch project editor](https://github.com/hejny/batch-project-editor)`;

export const githubOctokit = new Octokit({ auth: GITHUB_TOKEN });

export const WAIT_MULTIPLICATOR = 0.1;

//

/**
 * TODO: [üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø] Exclude projects
 * TODO: WAIT_MULTIPLICATOR: Allow to pass this via --flag
 * TODO: WAIT_MULTIPLICATOR: better name
 * TODO: WAIT_MULTIPLICATOR: Use everywhere
 * TODO: WAIT_MULTIPLICATOR: LIB waitasecond: Implement to library
 */
